/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.titansinc.stickynotesapp;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.font.TextAttribute;
import java.awt.font.TextLayout;
import java.awt.font.TextMeasurer;
import java.awt.geom.Rectangle2D;
import java.io.File;
import java.io.Serializable;
import java.text.AttributedCharacterIterator;
import java.text.AttributedString;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author zubair
 */
public class StickyPaper extends JPanel {

    /**
     * Creates new form StickyPaper
     */
    String Text=" ";
    
    public StickyPaper() {
        initComponents();
    }
    
    public void drawAgain(String Text){
        this.Text=Text;
        this.repaint();
    }

    
    public void paintComponent (Graphics g){
        super.paintComponent(g);
       
        Image background = new ImageIcon(getClass().getResource("/com/titansinc/stickynotesapp/paper.png")).getImage();
        Dimension size = new Dimension(background.getWidth(null), background.getHeight(null));
        setPreferredSize(size);
        setMinimumSize(size);
        setMaximumSize(size);
        setSize(size);
        setLayout(null);
        g.drawImage(background, 0, 0, null);      
        doDrawing(g);
        
    }
    
    
     
     
     
      private void doDrawing(Graphics g) {
       
        AttributedString Attr_str=null;    
        Graphics2D g2d = (Graphics2D) g;        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        Font font = new Font("Purisa", Font.PLAIN, 18);
        g2d.setFont(font);
        FontMetrics fm = g2d.getFontMetrics();
        
        int lineHeight = fm.getHeight();
	int curX = 25;
	int curY = 33;
        int width= 205;
        String[] words=null;
        try{
	words = Text.split(" ");
        }catch(NullPointerException e){
            words=new String[]{""};
        }
	for (String word : words)
	{
                int wordWidth = fm.stringWidth(word);
    
                if(word.equals("")){
                    Attr_str=new AttributedString(" ");
                }
                else if(word.equals("\n")){ 
                    curY+=lineHeight-3;
                    curX=25;
                    continue;
                }
                else{
                    Attr_str= new AttributedString(word); 
                }

                Attr_str.addAttribute(TextAttribute.FONT, font);             
                Attr_str.addAttribute(TextAttribute.FOREGROUND, Color.black);
     
		// If text exceeds the width, then move to next line.
		if (curX + wordWidth >= 15 + width)
		{
			curY += lineHeight-3 ;
			curX = 25;
		}
               
		
                g2d.drawString(Attr_str.getIterator(), curX, curY);

		// Move over to the right for next word.
		curX += wordWidth+5;
	}
        
    }
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
     
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(254, 224, 107));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
